(defun load (V1973) (let W1974 (value shen.*tc*) (let W1975 (let W1976 (get-time run) (let W1977 (shen.load-help W1974 (read-file V1973)) (let W1978 (get-time run) (let W1979 (- W1978 W1976) (let W1980 (pr (cn "
run time: " (cn (str W1979) " secs
")) (stoutput)) W1977))))) (let W1981 (if W1974 (pr (cn "
typechecked in " (shen.app (inferences) " inferences
" shen.a)) (stoutput)) shen.skip) loaded))))

(defun shen.load-help (V1984 V1985) (cond ((= false V1984) (shen.eval-and-print V1985)) (true (shen.check-eval-and-print V1985))))

(defun shen.eval-and-print (V1986) (map (lambda Z1987 (pr (shen.app (eval-kl (shen.shen->kl Z1987)) "
" shen.s) (stoutput))) V1986))

(defun shen.check-eval-and-print (V1988) (let W1989 (mapcan (lambda Z1990 (shen.typetable Z1990)) V1988) (let W1991 (trap-error (shen.assumetypes W1989) (lambda Z1992 (shen.unwind-types Z1992 W1989))) (trap-error (shen.work-through V1988) (lambda Z1993 (shen.unwind-types Z1993 W1989))))))

(defun shen.typetable (V1998) (cond ((and (cons? V1998) (and (= define (hd V1998)) (and (cons? (tl V1998)) (and (cons? (tl (tl V1998))) (= { (hd (tl (tl V1998)))))))) (cons (hd (tl V1998)) (cons (shen.rectify-type (shen.type-F (hd (tl V1998)) (tl (tl (tl V1998))))) ()))) ((and (cons? V1998) (and (= define (hd V1998)) (cons? (tl V1998)))) (simple-error (cn "missing { in " (shen.app (hd (tl V1998)) "
" shen.a)))) (true ())))

(defun shen.type-F (V2005 V2006) (cond ((and (cons? V2006) (= } (hd V2006))) ()) ((cons? V2006) (cons (hd V2006) (shen.type-F V2005 (tl V2006)))) (true (simple-error (cn "missing } in " (shen.app V2005 "
" shen.a))))))

(defun shen.assumetypes (V2009) (cond ((= () V2009) ()) ((and (cons? V2009) (cons? (tl V2009))) (do (declare (hd V2009) (hd (tl V2009))) (shen.assumetypes (tl (tl V2009))))) (true (simple-error "implementation error in shen.assumetype"))))

(defun shen.unwind-types (V2014 V2015) (cond ((and (cons? V2015) (cons? (hd V2015))) (do (destroy (hd (hd V2015))) (shen.unwind-types V2014 (tl V2015)))) (true (simple-error (error-to-string V2014)))))

(defun shen.work-through (V2018) (cond ((= () V2018) ()) ((and (cons? V2018) (and (cons? (tl V2018)) (and (cons? (tl (tl V2018))) (= (hd (tl V2018)) (intern ":"))))) (let W2019 (shen.typecheck (hd V2018) (hd (tl (tl V2018)))) (if (= W2019 false) (shen.type-error) (let W2020 (eval-kl (shen.shen->kl (hd V2018))) (let W2021 (pr (shen.app W2020 (cn " : " (shen.app (shen.pretty-type W2019) "
" shen.r)) shen.s) (stoutput)) (shen.work-through (tl (tl (tl V2018))))))))) ((cons? V2018) (shen.work-through (cons (hd V2018) (cons (intern ":") (cons A (tl V2018)))))) (true (simple-error "implementation error in shen.work-through"))))

(defun shen.pretty-type (V2023) (cond ((and (cons? V2023) (and (cons? (hd V2023)) (and (= str (hd (hd V2023))) (and (cons? (tl (hd V2023))) (and (cons? (hd (tl (hd V2023)))) (and (= list (hd (hd (tl (hd V2023))))) (and (cons? (tl (hd (tl (hd V2023))))) (and (= () (tl (tl (hd (tl (hd V2023)))))) (and (cons? (tl (tl (hd V2023)))) (and (= () (tl (tl (tl (hd V2023))))) (and (cons? (tl V2023)) (and (= --> (hd (tl V2023))) (and (cons? (tl (tl V2023))) (and (cons? (hd (tl (tl V2023)))) (and (= str (hd (hd (tl (tl V2023))))) (and (cons? (tl (hd (tl (tl V2023))))) (and (cons? (hd (tl (hd (tl (tl V2023)))))) (and (= list (hd (hd (tl (hd (tl (tl V2023))))))) (and (cons? (tl (hd (tl (hd (tl (tl V2023))))))) (and (= () (tl (tl (hd (tl (hd (tl (tl V2023)))))))) (and (cons? (tl (tl (hd (tl (tl V2023)))))) (and (= () (tl (tl (tl (hd (tl (tl V2023))))))) (and (= () (tl (tl (tl V2023)))) (= (hd (tl (hd (tl (hd V2023))))) (hd (tl (hd (tl (hd (tl (tl V2023))))))))))))))))))))))))))))))) (cons (hd (tl (hd (tl (tl V2023))))) (cons ==> (tl (tl (hd (tl (tl V2023)))))))) (true V2023)))

(defun shen.type-error () (simple-error "type error
"))

(defun bootstrap (V2024) (let W2025 (shen.klfile V2024) (let W2026 (read-file V2024) (let W2027 (open W2025 out) (let W2028 (map (lambda Z2029 (shen.shen->kl-h Z2029)) W2026) (let W2030 (shen.write-kl W2028 W2027) W2025))))))

(defun shen.write-kl (V2033 V2034) (cond ((= () V2033) (close V2034)) ((and (cons? V2033) (cons? (hd V2033))) (shen.write-kl (tl V2033) (do (shen.write-kl-h (hd V2033) V2034) V2034))) ((cons? V2033) (shen.write-kl (tl V2033) V2034)) (true (shen.f-error shen.write-kl))))

(defun shen.write-kl-h (V2037 V2038) (cond ((and (cons? V2037) (and (= defun (hd V2037)) (and (cons? (tl V2037)) (and (= fail (hd (tl V2037))) (and (cons? (tl (tl V2037))) (and (= () (hd (tl (tl V2037)))) (and (cons? (tl (tl (tl V2037)))) (= () (tl (tl (tl (tl V2037)))))))))))) (pr "(defun fail () shen.fail!)" V2038)) (true (pr (shen.app V2037 "

" shen.r) V2038))))

(defun shen.klfile (V2039) (cond ((= "" V2039) ".kl") ((= ".shen" V2039) ".kl") ((shen.+string? V2039) (@s (hdstr V2039) (shen.klfile (tlstr V2039)))) (true (shen.f-error shen.klfile))))

